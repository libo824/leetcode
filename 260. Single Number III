class Solution {
public:
    vector<int> singleNumber(vector<int>& nums) {
        int n = 0, j = 0;
        vector<int> res(2,0);
        for(int i=0;i<nums.size();i++){
            n^=nums[i];
        }
        while(!((n>>j)&1)){
            j++;
        }
        for(int i=0;i<nums.size();i++){
            if(((nums[i]>>j)&1) == 1){
                res[0]^=nums[i];
            }else{
                res[1]^=nums[i];
            }
        }
        
        return res;
    }
};
//solution 2
class Solution {
public:
    vector<int> singleNumber(vector<int>& nums) {
        int n = 0;
        vector<int> res(2,0);
        for(int i=0;i<nums.size();i++){
            n^=nums[i];
        }
        n = n &~(n-1);
        for(int i=0;i<nums.size();i++){
            if((nums[i]&n) == n){
                res[0]^=nums[i];
            }else{
                res[1]^=nums[i];
            }
        }
        
        return res;
    }
};
