class Solution {
public:
    TreeNode* sortedListToBST(ListNode* head) {
        if(!head) return nullptr;
        if(!head->next) return new TreeNode(head->val);
        ListNode* fast = head;
        ListNode* slow = head;
        //容易出错的地方1，需要给pre赋值
        ListNode* pre = slow;
        while(fast->next && fast->next->next){
            fast = fast->next->next;
            pre = slow;
            slow = slow->next;
        }
        fast = slow->next;
        pre->next = nullptr;
        TreeNode* root = new TreeNode(slow->val);
        //容易出错的地方2
        if(head!=slow) root->left = sortedListToBST(head);
        root->right = sortedListToBST(fast);
        return root;
        
    }
};
