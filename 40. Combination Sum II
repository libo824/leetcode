class Solution {
public:
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        vector<vector<int>> res;
        vector<int> out;
        sort(candidates.begin(),candidates.end());
        helper(candidates, target,0,out,res);
        return res;
    }
private:
    void helper(vector<int>& candidates, int target, int start,vector<int>& out, vector<vector<int>>& res){
        if(target<0) return;
        if(target==0){
            res.push_back(out);
            return;
        }
        for(int i = start;i<candidates.size();i++){
            out.push_back(candidates[i]);
            helper(candidates,target-candidates[i],i+1,out,res);
            out.pop_back();
            while(i+1<=candidates.size() && candidates[i] == candidates[i+1]) i++;
        }
        return;
    }
};
