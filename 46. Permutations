class Solution {
public:
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>> res;
        vector<int> out;
        vector<bool> visited(nums.size(),false);
        helper(nums,0,visited,out,res);
        return res;
    }
private:
    void helper(vector<int>& nums, int level, vector<bool>& visited,vector<int>& out, vector<vector<int>>& res){
        if(level == nums.size()){
            res.push_back(out);
            return;
        }
        for(int i = 0;i<nums.size();i++){
            if(!visited[i]){
                visited[i] = true;
                out.push_back(nums[i]);
                helper(nums, level+1, visited,out,res);
                out.pop_back();
                visited[i] = false;
            }
        }
        return;
    }
};
