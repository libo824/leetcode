class Solution {
public:
    vector<string> restoreIpAddresses(string s) {
        vector<string> res;
        helper(s,4,"",res);
        return res;
    }
    void helper(string s,int k, string out, vector<string>& res){
        if(k==0){
            if(s.empty())
                res.push_back(out);
            return;
        }
        for(int i=1;i<=3;i++){
            if(s.size()>=i && isValid(s.substr(0,i))){
                if(k==4) 
                    helper(s.substr(i),k-1,out+s.substr(0,i),res);
                else
                    helper(s.substr(i),k-1,out+"."+s.substr(0,i),res);
            }
        }
        return;
    }
    bool isValid(string s){
        if(s.empty()||s.size()>3 || (s.size()>1 && s[0]=='0')) return false;
        int val = stoi(s);
        return val<=255 && val>=0;
    }
};
